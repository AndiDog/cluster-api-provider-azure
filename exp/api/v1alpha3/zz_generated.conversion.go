//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen-v0.23.1. DO NOT EDIT.

package v1alpha3

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	clusterapiproviderazureapiv1alpha3 "sigs.k8s.io/cluster-api-provider-azure/api/v1alpha3"
	clusterapiproviderazureapiv1beta1 "sigs.k8s.io/cluster-api-provider-azure/api/v1beta1"
	v1beta1 "sigs.k8s.io/cluster-api-provider-azure/exp/api/v1beta1"
	apiv1alpha3 "sigs.k8s.io/cluster-api/api/v1alpha3"
	apiv1beta1 "sigs.k8s.io/cluster-api/api/v1beta1"
	errors "sigs.k8s.io/cluster-api/errors"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*AzureMachinePool)(nil), (*v1beta1.AzureMachinePool)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha3_AzureMachinePool_To_v1beta1_AzureMachinePool(a.(*AzureMachinePool), b.(*v1beta1.AzureMachinePool), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta1.AzureMachinePool)(nil), (*AzureMachinePool)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_AzureMachinePool_To_v1alpha3_AzureMachinePool(a.(*v1beta1.AzureMachinePool), b.(*AzureMachinePool), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AzureMachinePoolInstanceStatus)(nil), (*v1beta1.AzureMachinePoolInstanceStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha3_AzureMachinePoolInstanceStatus_To_v1beta1_AzureMachinePoolInstanceStatus(a.(*AzureMachinePoolInstanceStatus), b.(*v1beta1.AzureMachinePoolInstanceStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta1.AzureMachinePoolInstanceStatus)(nil), (*AzureMachinePoolInstanceStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_AzureMachinePoolInstanceStatus_To_v1alpha3_AzureMachinePoolInstanceStatus(a.(*v1beta1.AzureMachinePoolInstanceStatus), b.(*AzureMachinePoolInstanceStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AzureMachinePoolList)(nil), (*v1beta1.AzureMachinePoolList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha3_AzureMachinePoolList_To_v1beta1_AzureMachinePoolList(a.(*AzureMachinePoolList), b.(*v1beta1.AzureMachinePoolList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta1.AzureMachinePoolList)(nil), (*AzureMachinePoolList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_AzureMachinePoolList_To_v1alpha3_AzureMachinePoolList(a.(*v1beta1.AzureMachinePoolList), b.(*AzureMachinePoolList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AzureMachinePoolMachineTemplate)(nil), (*v1beta1.AzureMachinePoolMachineTemplate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha3_AzureMachinePoolMachineTemplate_To_v1beta1_AzureMachinePoolMachineTemplate(a.(*AzureMachinePoolMachineTemplate), b.(*v1beta1.AzureMachinePoolMachineTemplate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AzureMachinePoolSpec)(nil), (*v1beta1.AzureMachinePoolSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha3_AzureMachinePoolSpec_To_v1beta1_AzureMachinePoolSpec(a.(*AzureMachinePoolSpec), b.(*v1beta1.AzureMachinePoolSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*apiv1alpha3.APIEndpoint)(nil), (*apiv1beta1.APIEndpoint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha3_APIEndpoint_To_v1beta1_APIEndpoint(a.(*apiv1alpha3.APIEndpoint), b.(*apiv1beta1.APIEndpoint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*AzureMachinePoolStatus)(nil), (*v1beta1.AzureMachinePoolStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha3_AzureMachinePoolStatus_To_v1beta1_AzureMachinePoolStatus(a.(*AzureMachinePoolStatus), b.(*v1beta1.AzureMachinePoolStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*clusterapiproviderazureapiv1alpha3.Image)(nil), (*clusterapiproviderazureapiv1beta1.Image)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha3_Image_To_v1beta1_Image(a.(*clusterapiproviderazureapiv1alpha3.Image), b.(*clusterapiproviderazureapiv1beta1.Image), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*clusterapiproviderazureapiv1alpha3.OSDisk)(nil), (*clusterapiproviderazureapiv1beta1.OSDisk)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha3_OSDisk_To_v1beta1_OSDisk(a.(*clusterapiproviderazureapiv1alpha3.OSDisk), b.(*clusterapiproviderazureapiv1beta1.OSDisk), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*clusterapiproviderazureapiv1alpha3.SpotVMOptions)(nil), (*clusterapiproviderazureapiv1beta1.SpotVMOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha3_SpotVMOptions_To_v1beta1_SpotVMOptions(a.(*clusterapiproviderazureapiv1alpha3.SpotVMOptions), b.(*clusterapiproviderazureapiv1beta1.SpotVMOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*apiv1beta1.APIEndpoint)(nil), (*apiv1alpha3.APIEndpoint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_APIEndpoint_To_v1alpha3_APIEndpoint(a.(*apiv1beta1.APIEndpoint), b.(*apiv1alpha3.APIEndpoint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta1.AzureMachinePoolMachineTemplate)(nil), (*AzureMachinePoolMachineTemplate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_AzureMachinePoolMachineTemplate_To_v1alpha3_AzureMachinePoolMachineTemplate(a.(*v1beta1.AzureMachinePoolMachineTemplate), b.(*AzureMachinePoolMachineTemplate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta1.AzureMachinePoolSpec)(nil), (*AzureMachinePoolSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_AzureMachinePoolSpec_To_v1alpha3_AzureMachinePoolSpec(a.(*v1beta1.AzureMachinePoolSpec), b.(*AzureMachinePoolSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta1.AzureMachinePoolStatus)(nil), (*AzureMachinePoolStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_AzureMachinePoolStatus_To_v1alpha3_AzureMachinePoolStatus(a.(*v1beta1.AzureMachinePoolStatus), b.(*AzureMachinePoolStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*clusterapiproviderazureapiv1beta1.Image)(nil), (*clusterapiproviderazureapiv1alpha3.Image)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Image_To_v1alpha3_Image(a.(*clusterapiproviderazureapiv1beta1.Image), b.(*clusterapiproviderazureapiv1alpha3.Image), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*clusterapiproviderazureapiv1beta1.OSDisk)(nil), (*clusterapiproviderazureapiv1alpha3.OSDisk)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_OSDisk_To_v1alpha3_OSDisk(a.(*clusterapiproviderazureapiv1beta1.OSDisk), b.(*clusterapiproviderazureapiv1alpha3.OSDisk), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*clusterapiproviderazureapiv1beta1.SpotVMOptions)(nil), (*clusterapiproviderazureapiv1alpha3.SpotVMOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_SpotVMOptions_To_v1alpha3_SpotVMOptions(a.(*clusterapiproviderazureapiv1beta1.SpotVMOptions), b.(*clusterapiproviderazureapiv1alpha3.SpotVMOptions), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha3_AzureMachinePool_To_v1beta1_AzureMachinePool(in *AzureMachinePool, out *v1beta1.AzureMachinePool, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha3_AzureMachinePoolSpec_To_v1beta1_AzureMachinePoolSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha3_AzureMachinePoolStatus_To_v1beta1_AzureMachinePoolStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha3_AzureMachinePool_To_v1beta1_AzureMachinePool is an autogenerated conversion function.
func Convert_v1alpha3_AzureMachinePool_To_v1beta1_AzureMachinePool(in *AzureMachinePool, out *v1beta1.AzureMachinePool, s conversion.Scope) error {
	return autoConvert_v1alpha3_AzureMachinePool_To_v1beta1_AzureMachinePool(in, out, s)
}

func autoConvert_v1beta1_AzureMachinePool_To_v1alpha3_AzureMachinePool(in *v1beta1.AzureMachinePool, out *AzureMachinePool, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_AzureMachinePoolSpec_To_v1alpha3_AzureMachinePoolSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_AzureMachinePoolStatus_To_v1alpha3_AzureMachinePoolStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_AzureMachinePool_To_v1alpha3_AzureMachinePool is an autogenerated conversion function.
func Convert_v1beta1_AzureMachinePool_To_v1alpha3_AzureMachinePool(in *v1beta1.AzureMachinePool, out *AzureMachinePool, s conversion.Scope) error {
	return autoConvert_v1beta1_AzureMachinePool_To_v1alpha3_AzureMachinePool(in, out, s)
}

func autoConvert_v1alpha3_AzureMachinePoolInstanceStatus_To_v1beta1_AzureMachinePoolInstanceStatus(in *AzureMachinePoolInstanceStatus, out *v1beta1.AzureMachinePoolInstanceStatus, s conversion.Scope) error {
	out.Version = in.Version
	out.ProvisioningState = (*clusterapiproviderazureapiv1beta1.ProvisioningState)(unsafe.Pointer(in.ProvisioningState))
	out.ProviderID = in.ProviderID
	out.InstanceID = in.InstanceID
	out.InstanceName = in.InstanceName
	out.LatestModelApplied = in.LatestModelApplied
	return nil
}

// Convert_v1alpha3_AzureMachinePoolInstanceStatus_To_v1beta1_AzureMachinePoolInstanceStatus is an autogenerated conversion function.
func Convert_v1alpha3_AzureMachinePoolInstanceStatus_To_v1beta1_AzureMachinePoolInstanceStatus(in *AzureMachinePoolInstanceStatus, out *v1beta1.AzureMachinePoolInstanceStatus, s conversion.Scope) error {
	return autoConvert_v1alpha3_AzureMachinePoolInstanceStatus_To_v1beta1_AzureMachinePoolInstanceStatus(in, out, s)
}

func autoConvert_v1beta1_AzureMachinePoolInstanceStatus_To_v1alpha3_AzureMachinePoolInstanceStatus(in *v1beta1.AzureMachinePoolInstanceStatus, out *AzureMachinePoolInstanceStatus, s conversion.Scope) error {
	out.Version = in.Version
	out.ProvisioningState = (*clusterapiproviderazureapiv1alpha3.VMState)(unsafe.Pointer(in.ProvisioningState))
	out.ProviderID = in.ProviderID
	out.InstanceID = in.InstanceID
	out.InstanceName = in.InstanceName
	out.LatestModelApplied = in.LatestModelApplied
	return nil
}

// Convert_v1beta1_AzureMachinePoolInstanceStatus_To_v1alpha3_AzureMachinePoolInstanceStatus is an autogenerated conversion function.
func Convert_v1beta1_AzureMachinePoolInstanceStatus_To_v1alpha3_AzureMachinePoolInstanceStatus(in *v1beta1.AzureMachinePoolInstanceStatus, out *AzureMachinePoolInstanceStatus, s conversion.Scope) error {
	return autoConvert_v1beta1_AzureMachinePoolInstanceStatus_To_v1alpha3_AzureMachinePoolInstanceStatus(in, out, s)
}

func autoConvert_v1alpha3_AzureMachinePoolList_To_v1beta1_AzureMachinePoolList(in *AzureMachinePoolList, out *v1beta1.AzureMachinePoolList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1beta1.AzureMachinePool, len(*in))
		for i := range *in {
			if err := Convert_v1alpha3_AzureMachinePool_To_v1beta1_AzureMachinePool(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha3_AzureMachinePoolList_To_v1beta1_AzureMachinePoolList is an autogenerated conversion function.
func Convert_v1alpha3_AzureMachinePoolList_To_v1beta1_AzureMachinePoolList(in *AzureMachinePoolList, out *v1beta1.AzureMachinePoolList, s conversion.Scope) error {
	return autoConvert_v1alpha3_AzureMachinePoolList_To_v1beta1_AzureMachinePoolList(in, out, s)
}

func autoConvert_v1beta1_AzureMachinePoolList_To_v1alpha3_AzureMachinePoolList(in *v1beta1.AzureMachinePoolList, out *AzureMachinePoolList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AzureMachinePool, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_AzureMachinePool_To_v1alpha3_AzureMachinePool(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_AzureMachinePoolList_To_v1alpha3_AzureMachinePoolList is an autogenerated conversion function.
func Convert_v1beta1_AzureMachinePoolList_To_v1alpha3_AzureMachinePoolList(in *v1beta1.AzureMachinePoolList, out *AzureMachinePoolList, s conversion.Scope) error {
	return autoConvert_v1beta1_AzureMachinePoolList_To_v1alpha3_AzureMachinePoolList(in, out, s)
}

func autoConvert_v1alpha3_AzureMachinePoolMachineTemplate_To_v1beta1_AzureMachinePoolMachineTemplate(in *AzureMachinePoolMachineTemplate, out *v1beta1.AzureMachinePoolMachineTemplate, s conversion.Scope) error {
	out.VMSize = in.VMSize
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(clusterapiproviderazureapiv1beta1.Image)
		if err := Convert_v1alpha3_Image_To_v1beta1_Image(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Image = nil
	}
	if err := Convert_v1alpha3_OSDisk_To_v1beta1_OSDisk(&in.OSDisk, &out.OSDisk, s); err != nil {
		return err
	}
	out.DataDisks = *(*[]clusterapiproviderazureapiv1beta1.DataDisk)(unsafe.Pointer(&in.DataDisks))
	out.SSHPublicKey = in.SSHPublicKey
	out.AcceleratedNetworking = (*bool)(unsafe.Pointer(in.AcceleratedNetworking))
	out.TerminateNotificationTimeout = (*int)(unsafe.Pointer(in.TerminateNotificationTimeout))
	out.SecurityProfile = (*clusterapiproviderazureapiv1beta1.SecurityProfile)(unsafe.Pointer(in.SecurityProfile))
	if in.SpotVMOptions != nil {
		in, out := &in.SpotVMOptions, &out.SpotVMOptions
		*out = new(clusterapiproviderazureapiv1beta1.SpotVMOptions)
		if err := Convert_v1alpha3_SpotVMOptions_To_v1beta1_SpotVMOptions(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.SpotVMOptions = nil
	}
	return nil
}

// Convert_v1alpha3_AzureMachinePoolMachineTemplate_To_v1beta1_AzureMachinePoolMachineTemplate is an autogenerated conversion function.
func Convert_v1alpha3_AzureMachinePoolMachineTemplate_To_v1beta1_AzureMachinePoolMachineTemplate(in *AzureMachinePoolMachineTemplate, out *v1beta1.AzureMachinePoolMachineTemplate, s conversion.Scope) error {
	return autoConvert_v1alpha3_AzureMachinePoolMachineTemplate_To_v1beta1_AzureMachinePoolMachineTemplate(in, out, s)
}

func autoConvert_v1beta1_AzureMachinePoolMachineTemplate_To_v1alpha3_AzureMachinePoolMachineTemplate(in *v1beta1.AzureMachinePoolMachineTemplate, out *AzureMachinePoolMachineTemplate, s conversion.Scope) error {
	out.VMSize = in.VMSize
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(clusterapiproviderazureapiv1alpha3.Image)
		if err := Convert_v1beta1_Image_To_v1alpha3_Image(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.Image = nil
	}
	if err := Convert_v1beta1_OSDisk_To_v1alpha3_OSDisk(&in.OSDisk, &out.OSDisk, s); err != nil {
		return err
	}
	out.DataDisks = *(*[]clusterapiproviderazureapiv1alpha3.DataDisk)(unsafe.Pointer(&in.DataDisks))
	out.SSHPublicKey = in.SSHPublicKey
	out.AcceleratedNetworking = (*bool)(unsafe.Pointer(in.AcceleratedNetworking))
	// WARNING: in.Diagnostics requires manual conversion: does not exist in peer-type
	out.TerminateNotificationTimeout = (*int)(unsafe.Pointer(in.TerminateNotificationTimeout))
	out.SecurityProfile = (*clusterapiproviderazureapiv1alpha3.SecurityProfile)(unsafe.Pointer(in.SecurityProfile))
	if in.SpotVMOptions != nil {
		in, out := &in.SpotVMOptions, &out.SpotVMOptions
		*out = new(clusterapiproviderazureapiv1alpha3.SpotVMOptions)
		if err := Convert_v1beta1_SpotVMOptions_To_v1alpha3_SpotVMOptions(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.SpotVMOptions = nil
	}
	// WARNING: in.SubnetName requires manual conversion: does not exist in peer-type
	// WARNING: in.VMExtensions requires manual conversion: does not exist in peer-type
	// WARNING: in.NetworkInterfaces requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha3_AzureMachinePoolSpec_To_v1beta1_AzureMachinePoolSpec(in *AzureMachinePoolSpec, out *v1beta1.AzureMachinePoolSpec, s conversion.Scope) error {
	out.Location = in.Location
	if err := Convert_v1alpha3_AzureMachinePoolMachineTemplate_To_v1beta1_AzureMachinePoolMachineTemplate(&in.Template, &out.Template, s); err != nil {
		return err
	}
	out.AdditionalTags = *(*clusterapiproviderazureapiv1beta1.Tags)(unsafe.Pointer(&in.AdditionalTags))
	out.ProviderID = in.ProviderID
	out.ProviderIDList = *(*[]string)(unsafe.Pointer(&in.ProviderIDList))
	out.Identity = clusterapiproviderazureapiv1beta1.VMIdentity(in.Identity)
	out.UserAssignedIdentities = *(*[]clusterapiproviderazureapiv1beta1.UserAssignedIdentity)(unsafe.Pointer(&in.UserAssignedIdentities))
	out.RoleAssignmentName = in.RoleAssignmentName
	return nil
}

// Convert_v1alpha3_AzureMachinePoolSpec_To_v1beta1_AzureMachinePoolSpec is an autogenerated conversion function.
func Convert_v1alpha3_AzureMachinePoolSpec_To_v1beta1_AzureMachinePoolSpec(in *AzureMachinePoolSpec, out *v1beta1.AzureMachinePoolSpec, s conversion.Scope) error {
	return autoConvert_v1alpha3_AzureMachinePoolSpec_To_v1beta1_AzureMachinePoolSpec(in, out, s)
}

func autoConvert_v1beta1_AzureMachinePoolSpec_To_v1alpha3_AzureMachinePoolSpec(in *v1beta1.AzureMachinePoolSpec, out *AzureMachinePoolSpec, s conversion.Scope) error {
	out.Location = in.Location
	if err := Convert_v1beta1_AzureMachinePoolMachineTemplate_To_v1alpha3_AzureMachinePoolMachineTemplate(&in.Template, &out.Template, s); err != nil {
		return err
	}
	out.AdditionalTags = *(*clusterapiproviderazureapiv1alpha3.Tags)(unsafe.Pointer(&in.AdditionalTags))
	out.ProviderID = in.ProviderID
	out.ProviderIDList = *(*[]string)(unsafe.Pointer(&in.ProviderIDList))
	out.Identity = clusterapiproviderazureapiv1alpha3.VMIdentity(in.Identity)
	// WARNING: in.SystemAssignedIdentityRole requires manual conversion: does not exist in peer-type
	out.UserAssignedIdentities = *(*[]clusterapiproviderazureapiv1alpha3.UserAssignedIdentity)(unsafe.Pointer(&in.UserAssignedIdentities))
	out.RoleAssignmentName = in.RoleAssignmentName
	// WARNING: in.Strategy requires manual conversion: does not exist in peer-type
	// WARNING: in.NodeDrainTimeout requires manual conversion: does not exist in peer-type
	// WARNING: in.OrchestrationMode requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha3_AzureMachinePoolStatus_To_v1beta1_AzureMachinePoolStatus(in *AzureMachinePoolStatus, out *v1beta1.AzureMachinePoolStatus, s conversion.Scope) error {
	out.Ready = in.Ready
	out.Replicas = in.Replicas
	out.Instances = *(*[]*v1beta1.AzureMachinePoolInstanceStatus)(unsafe.Pointer(&in.Instances))
	out.Version = in.Version
	out.ProvisioningState = (*clusterapiproviderazureapiv1beta1.ProvisioningState)(unsafe.Pointer(in.ProvisioningState))
	out.FailureReason = (*errors.MachineStatusError)(unsafe.Pointer(in.FailureReason))
	out.FailureMessage = (*string)(unsafe.Pointer(in.FailureMessage))
	out.Conditions = *(*apiv1beta1.Conditions)(unsafe.Pointer(&in.Conditions))
	// WARNING: in.LongRunningOperationState requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta1_AzureMachinePoolStatus_To_v1alpha3_AzureMachinePoolStatus(in *v1beta1.AzureMachinePoolStatus, out *AzureMachinePoolStatus, s conversion.Scope) error {
	out.Ready = in.Ready
	out.Replicas = in.Replicas
	out.Instances = *(*[]*AzureMachinePoolInstanceStatus)(unsafe.Pointer(&in.Instances))
	// WARNING: in.Image requires manual conversion: does not exist in peer-type
	out.Version = in.Version
	out.ProvisioningState = (*clusterapiproviderazureapiv1alpha3.VMState)(unsafe.Pointer(in.ProvisioningState))
	out.FailureReason = (*errors.MachineStatusError)(unsafe.Pointer(in.FailureReason))
	out.FailureMessage = (*string)(unsafe.Pointer(in.FailureMessage))
	out.Conditions = *(*apiv1alpha3.Conditions)(unsafe.Pointer(&in.Conditions))
	// WARNING: in.LongRunningOperationStates requires manual conversion: does not exist in peer-type
	return nil
}
